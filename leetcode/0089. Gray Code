/*
89. Gray Code

The gray code is a binary numeral system where two successive values differ in only one bit.

Given an integer n representing the total number of bits in the code, return any sequence of gray code.

A gray code sequence must begin with 0.

 

Example 1:

Input: n = 2
Output: [0,1,3,2]
Explanation:
00 - 0
01 - 1
11 - 3
10 - 2
[0,2,3,1] is also a valid gray code sequence.
00 - 0
10 - 2
11 - 3
01 - 1
Example 2:

Input: n = 1
Output: [0,1]
 

Constraints:

1 <= n <= 16
*/
class Solution {
    public List<Integer> grayCode(int n) {
        List<Integer> result = new ArrayList<Integer>();
        Set<Integer> set = new HashSet<Integer>();
        
        char[] gray = new char[n];
        Arrays.fill(gray, '0');
        result.add(0);
        set.add(0);
        generateGrayCode(new String(gray), result, set);
        return result;
    }
    
    private void generateGrayCode(String current, List<Integer> result, Set<Integer> set){
        //System.out.println(current);
        for(int x = 0; x < current.length(); x++){
            String next = current.substring(0,x) + invert(current.charAt(x)) + current.substring(x+1);
            int temp = Integer.parseInt(next,2);
            if(!set.contains(temp)){
                result.add(temp);
                set.add(temp);
                generateGrayCode(next, result, set);
                return;
            }
        }   
    }
    
    private String invert(char current){
        return current == '1' ? "0" : "1";
    }
}
