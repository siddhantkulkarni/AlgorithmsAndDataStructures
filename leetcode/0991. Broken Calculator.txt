'''
991. Broken Calculator

On a broken calculator that has a number showing on its display, we can perform two operations:

Double: Multiply the number on the display by 2, or;
Decrement: Subtract 1 from the number on the display.
Initially, the calculator is displaying the number X.

Return the minimum number of operations needed to display the number Y.

 

Example 1:

Input: X = 2, Y = 3
Output: 2
Explanation: Use double operation and then decrement operation {2 -> 4 -> 3}.
Example 2:

Input: X = 5, Y = 8
Output: 2
Explanation: Use decrement and then double {5 -> 4 -> 8}.
Example 3:

Input: X = 3, Y = 10
Output: 3
Explanation:  Use double, decrement and double {3 -> 6 -> 5 -> 10}.
Example 4:

Input: X = 1024, Y = 1
Output: 1023
Explanation: Use decrement operations 1023 times.
 

Note:

1 <= X <= 10^9
1 <= Y <= 10^9
'''
class Solution:
    def brokenCalc(self, X: int, Y: int) -> int:
        if Y < X:
            return X - Y
        if Y == X:
            return 0
        
        count = 0
        if Y % 2 == 1:
            Y += 1
            count += 1
        while Y/2 > X:
            Y = Y/2
            count += 1
            if Y % 2 == 1:
                Y += 1
                count += 1
        if Y == X + X:
            return count+1
        else:
            if X-(Y/2) < X+X-Y:
                if Y%2 == 0:
                    count += (X-(Y/2)) + 1
                else:
                    Y += 1
                    count += (X-(Y/2)) + 2
            else:
                count += (X+X-Y) + 1
            return int(count)