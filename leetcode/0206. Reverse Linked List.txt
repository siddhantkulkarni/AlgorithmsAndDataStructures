'''
206. Reverse Linked List

Reverse a singly linked list.

Example:

Input: 1->2->3->4->5->NULL
Output: 5->4->3->2->1->NULL
Follow up:

A linked list can be reversed either iteratively or recursively. Could you implement both?
'''

# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution:
    def reverseList(self, head: ListNode) -> ListNode:
        if head == None:
            return None
        if head.next == None:
            return head
        if head.next.next == None:
            temp = head.next
            head.next = None
            temp.next = head
            head = temp
            return head
        first = head
        second = first.next
        third = second.next
        head.next = None
        while third != None:
            second.next = first
            first = second
            second = third
            third = third.next
        second.next = first
        return second
        