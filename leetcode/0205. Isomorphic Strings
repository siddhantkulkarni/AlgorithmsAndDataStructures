/*
205. Isomorphic Strings

Given two strings s and t, determine if they are isomorphic.

Two strings s and t are isomorphic if the characters in s can be replaced to get t.

All occurrences of a character must be replaced with another character while preserving the order of characters. No two characters may map to the same character, but a character may map to itself.

 

Example 1:

Input: s = "egg", t = "add"
Output: true
Example 2:

Input: s = "foo", t = "bar"
Output: false
Example 3:

Input: s = "paper", t = "title"
Output: true
 

Constraints:

1 <= s.length <= 5 * 104
t.length == s.length
s and t consist of any valid ascii character.
*/
class Solution {
    public boolean isIsomorphic(String s, String t) {
        if(s.length() != t.length()) return false;
        if(s.equals(t)) return true;
        HashMap<Character, Character> map = new HashMap<>();
        HashMap<Character, Character> rev = new HashMap<>();
        for(int x = 0; x < s.length(); x ++){
            char source = s.charAt(x);
            char target = t.charAt(x);
            
            if(map.containsKey(source) && map.get(source) != target)
                return false;
            if(rev.containsKey(target) && rev.get(target) !=source)
                return false;
            map.put(source, target);
            rev.put(target,source);
        }
        return true;
    }
}
