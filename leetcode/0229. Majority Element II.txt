/*
229. Majority Element II

Given an integer array of size n, find all elements that appear more than ⌊ n/3 ⌋ times.

Note: The algorithm should run in linear time and in O(1) space.

Example 1:

Input: [3,2,3]
Output: [3]
Example 2:

Input: [1,1,1,3,3,2,2,2]
Output: [1,2]
*/
class Solution {
    public List<Integer> majorityElement(int[] nums) {
        HashMap<Integer,Integer> map = new HashMap<Integer,Integer>();
        HashSet<Integer> result = new HashSet<Integer>();
        for(int num: nums){
            int count = 0;
            if(map.containsKey(num)){
                count = map.get(num);
            }
            map.put(num, count+1);
            if(count+1 > nums.length/3)
                result.add(num);
        }
        return new ArrayList<Integer>(result);
    }
}