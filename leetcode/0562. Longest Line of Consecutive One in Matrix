/*
562. Longest Line of Consecutive One in Matrix

Given a 01 matrix M, find the longest line of consecutive one in the matrix. The line could be horizontal, vertical, diagonal or anti-diagonal.
Example:
Input:
[[0,1,1,0],
 [0,1,1,0],
 [0,0,0,1]]
Output: 3
Hint: The number of elements in the given matrix will not exceed 10,000.


*/
class Solution {
    public int longestLine(int[][] M) {
        if(M.length == 0) return 0;
        int ROWS = M.length, COLS = M[0].length;
        int[][][] dp = new int[ROWS][COLS][4];
        int max = 0;
        for(int r = 0; r < ROWS; r++){
            for(int c = 0; c < COLS; c++){
                if(M[r][c] == 1){
                    dp[r][c][0] = (c == 0? 0: dp[r][c-1][0]) + 1;
                    dp[r][c][1] = (r == 0? 0: dp[r-1][c][1]) + 1;
                    dp[r][c][2] = (r == 0 || c == 0 ? 0: dp[r-1][c-1][2]) + 1;
                    dp[r][c][3] = (r == 0 || c == COLS - 1 ? 0: dp[r-1][c+1][3]) + 1;
                    max = Math.max(Math.max(max, Math.max(dp[r][c][0], dp[r][c][1])), Math.max(dp[r][c][2], dp[r][c][3]));
                   
                }
            }
        }
        
        return max;
    }
}
