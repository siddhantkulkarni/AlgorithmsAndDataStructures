/*
15. 3Sum

Given an array nums of n integers, are there elements a, b, c in nums such that a + b + c = 0? Find all unique triplets in the array which gives the sum of zero.

Note:

The solution set must not contain duplicate triplets.

Example:

Given array nums = [-1, 0, 1, 2, -1, -4],

A solution set is:
[
  [-1, 0, 1],
  [-1, -1, 2]
]
*/
class Solution {
    public List<List<Integer>> threeSum(int[] nums) {
        List<List<Integer>> result = new ArrayList();
        Arrays.sort(nums);
        for(int x = 0; x < nums.length - 2; x++){
            if(nums[x] > 0) break;
            if(x > 0 && nums[x - 1] == nums[x]) continue;
            int remaining = 0 - nums[x];
            int start = x + 1, end = nums.length - 1;
            while(start < end){
                if(nums[start] + nums[end] == remaining){
                    List<Integer> toAdd = new ArrayList<Integer>();
                    toAdd.add(nums[x]);
                    toAdd.add(nums[start]);
                    toAdd.add(nums[end]);
                    result.add(toAdd);
                    start++;
                    end--;
                    while(start < end && nums[start] == nums[start - 1])
                        start++;
                    while(start < end && nums[end] == nums[end + 1]) 
                        end--;     
                }else if(nums[start] + nums[end] > remaining){
                    end--;
                }else{
                    start++;
                }
                
               
                
            }
            
        }
        return result;
    }
}
