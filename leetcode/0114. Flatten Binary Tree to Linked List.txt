/*
114. Flatten Binary Tree to Linked List

Given a binary tree, flatten it to a linked list in-place.

For example, given the following tree:

    1
   / \
  2   5
 / \   \
3   4   6
The flattened tree should look like:

1
 \
  2
   \
    3
     \
      4
       \
        5
         \
          6
*/
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public void flatten(TreeNode root) {
        root = flattenTree(root);
    }
    
    public TreeNode flattenTree(TreeNode root){
        if(root == null)
            return null;
        TreeNode left = root.left;
        TreeNode right = root.right;
        root.left = null;
        root.right = flattenTree(left);
        TreeNode temp = root;
        while(temp.right!=null){
            temp = temp.right;
        }
        temp.right = flattenTree(right);
        return root;
    }
}