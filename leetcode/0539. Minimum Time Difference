/*
539. Minimum Time Difference
Given a list of 24-hour clock time points in "HH:MM" format, return the minimum minutes difference between any two time-points in the list.
 

Example 1:

Input: timePoints = ["23:59","00:00"]
Output: 1
Example 2:

Input: timePoints = ["00:00","23:59","00:00"]
Output: 0
 

Constraints:

2 <= timePoints <= 2 * 104
timePoints[i] is in the format "HH:MM".

*/
class Solution {
    public int findMinDifference(List<String> timePoints) {
        int[] minutes = new int[timePoints.size()];
        for(int x = 0; x < timePoints.size(); x++){
            minutes[x] = getTotalMinutes(timePoints.get(x));
        }
        
        Arrays.sort(minutes);
        
        int min = Integer.MAX_VALUE;
        for(int x = 0; x < minutes.length - 1; x++){
            min = Math.min(min, minutes[x + 1] - minutes[x]);
        }
        
        if(minutes.length > 1){
            min = Math.min(min, (minutes[0]+1440) - minutes[minutes.length - 1]);
        }
        return min;
    }
    
    
    private int getTotalMinutes(String time){
        String[] parts = time.split(":");
        int hours = Integer.parseInt(parts[0]);
        int minutes = Integer.parseInt(parts[1]);
        return (hours * 60) + minutes;
    }
}
